# Generated by Django 5.2.5 on 2025-09-04 18:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del chat')),
                ('chat_id', models.BigIntegerField(help_text='ID numérico del chat de Telegram', unique=True, verbose_name='ID del Chat')),
                ('chat_type', models.CharField(choices=[('private', 'Privado'), ('group', 'Grupo'), ('supergroup', 'Supergrupo'), ('channel', 'Canal')], default='private', max_length=20, verbose_name='Tipo de chat')),
                ('username', models.CharField(blank=True, help_text='Username del chat (si aplica)', max_length=100, null=True, verbose_name='Username')),
                ('title', models.CharField(blank=True, help_text='Título del grupo/canal (si aplica)', max_length=255, null=True, verbose_name='Título')),
                ('alert_level', models.CharField(choices=[('high', 'Alta'), ('medium', 'Media'), ('low', 'Baja'), ('all', 'Todas')], default='all', help_text='Qué nivel de alertas recibe este chat', max_length=10, verbose_name='Nivel de alertas')),
                ('email_alerts', models.BooleanField(default=True, help_text='Recibir alertas cuando lleguen nuevos emails', verbose_name='Alertas de email')),
                ('system_alerts', models.BooleanField(default=False, help_text='Recibir alertas de errores del sistema', verbose_name='Alertas del sistema')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Chat de Telegram',
                'verbose_name_plural': 'Chats de Telegram',
            },
        ),
        migrations.CreateModel(
            name='TelegramConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Default Bot', max_length=100, unique=True, verbose_name='Nombre de configuración')),
                ('bot_token', models.CharField(help_text='Token proporcionado por BotFather', max_length=255, verbose_name='Token del Bot')),
                ('webhook_url', models.URLField(blank=True, help_text='URL donde Telegram enviará los updates (opcional)', null=True, verbose_name='URL del Webhook')),
                ('webhook_secret_token', models.CharField(blank=True, help_text='Token secreto para validar webhooks (opcional)', max_length=256, null=True, verbose_name='Token secreto del webhook')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuración de Telegram',
                'verbose_name_plural': 'Configuraciones de Telegram',
            },
        ),
        migrations.CreateModel(
            name='TelegramMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('email_alert', 'Alerta de Email'), ('system_alert', 'Alerta del Sistema'), ('manual', 'Manual')], default='email_alert', max_length=20, verbose_name='Tipo de mensaje')),
                ('subject', models.CharField(max_length=255, verbose_name='Asunto')),
                ('message', models.TextField(verbose_name='Mensaje')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('sent', 'Enviado'), ('failed', 'Fallido'), ('retry', 'Reintentando')], default='pending', max_length=10, verbose_name='Estado')),
                ('telegram_message_id', models.BigIntegerField(blank=True, null=True, verbose_name='ID del mensaje en Telegram')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Mensaje de error')),
                ('retry_count', models.IntegerField(default=0, verbose_name='Intentos de reenvío')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Enviado en')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_subject', models.CharField(blank=True, max_length=255, null=True, verbose_name='Asunto del email original')),
                ('email_sender', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Remitente del email')),
                ('email_priority', models.CharField(blank=True, max_length=10, null=True, verbose_name='Prioridad del email')),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='telegram_bot.telegramchat', verbose_name='Chat')),
            ],
            options={
                'verbose_name': 'Mensaje de Telegram',
                'verbose_name_plural': 'Mensajes de Telegram',
                'ordering': ['-created_at'],
            },
        ),
    ]
